
#!/usr/bin/env python3

import json
import locale
import sys
import emails
import reports

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_sale = {"sale": 0}
  max_revenue = {"revenue": 0}
  car_year = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_s$
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    # TODO: also handle most popular car_year
    if item["total_sales"] > max_sale["sale"]:
      max_sale["sale"] = item["total_sales"]
      max_sale = item
    car_year[item["car"]["car_year"]]=car_year.get(item["car"]["car_year"],0) + item["total_sales"]
  Keymax = max(car_year, key=car_year.get)
  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(
      format_car(max_sales["car"]),max_sales["sale"]),
    "The most popular year was {} with {}  sales.".format(Keymax,car_year[keymax])
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
     table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])

  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  info = " "
  body = " "
  for line in summary:
        info = line + "<br/>"
        body = line + "\n"
  reports.generate("/tmp/cars.pdf", "Sales summary for last month", info ,cars_dict_to_table(data))
  message = message = emails.generate("automation@example.com", "exampleemail@mail.ok","Sales summary for last month",body,"/tmp/cars.pdf")

if __name__ == "__main__":
  main(sys.argv)
